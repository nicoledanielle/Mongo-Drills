Find all restaurants with: 
--cuisine set to something other than "Not Listed/Not Applicable"
--borough set to something other than "Missing"
--At least one grade
--None of the grades set to "Not Yet Graded"
--None of the scores set to -1


db.restaurants.find({cuisine: {$ne: 'Not listed/Not Applicable'}})

db.restaurants.find({borough: {$ne: 'Missing'}})

db.restaurants.find({'grades.grade': {$exists:true}})

db.restaurants.find({grades: {$elemMatch: { grade: { $ne: 'Not Yet Graded' }, 
score: { $ne: -1 }}}})
    

--linking them all together:

db.restaurants.find(
{$and: [
{cuisine: {$ne: 'Not listed/Not Applicable'}},
{borough: {$ne: 'Missing'}},
{'grades.grade': {$exists:true}},
{grades: {$elemMatch: { grade: { $ne: 'Not Yet Graded' }, 
score: { $ne: -1 }}}}
]})


How many restaurants did it return? 3946, so 4 restaurants were filtered out

Ignoring your filter... create a list of all cuisines offered with no duplicates:

db.restaurants.distinct('cuisine')


Find the first five restaurants with the lowest positive score in one of their gradings.

db.restaurants.find({'grades.score': {$exists:true}}).sort({'grades.score': 1},{'grades.score': {$exists:true}}).limit(5)


Find the restaurants which have only been graded A.

db.restaurants.find({'grades.grade': {$nin: ['B', 'C', 'Not Yet Graded']}})